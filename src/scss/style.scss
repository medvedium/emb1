@use 'sass:math';

//@import 'helpers/modules';

//@import "base/forms/rating";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import 'base/mixins';

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
@import 'fonts/fonts';

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
@import "fonts/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: 'Roboto';
$fontSize: rem(16); // где 16(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #000; // Цвет шрифта по умолчанию
$dark: #0c131d;
$dark-blue: #133050;

$red: #f04438;
$active-star: #f2c94c;

$status-delivery: #f2994a;
$status-available: #27ae60;
$status-order: #f04438;

$main-color: #e72696;
$pink-light: #e93fa1;
$pink-dark: #c5167b;

$yellow: #f9ed37;

$blue: #00adef;
$blue-light: #0abbff;
$blue-dark: #0089bd;

$white: #ffffff;

$gray: #c8cbce;
$gray-1: #b8b8b8;
$gray-2: #e7e9eb;
$gray-3: #f7f8fa;
$gray-4: #86898e;
$gray-5: #90a4af;
$gray-6: #b0bfc6;

$filter-checkbox-value: #828282;

$color-item-border: #c4c4c4;

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1342;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Ширина страбатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";
@import 'helpers/modules';
@import 'vendor/libs';
@import 'base/modules';
@import '../blocks/components/components';
@import '../blocks/modules/modules';
@import "base/forms/rating";
// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import 'base/null';
@import 'base/modules';
@import 'base/helpers';

body {
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}

	// Сайт загружен
	.loaded & {
	}
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}

	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
/*
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}
*/
// Подключение базовых стилей, шаблонов (заготовок) и вспомагательных классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import 'base';

// Подключение стилей общих элементов проекта
@import 'common';

// Подключение стилей отдельных блоков
@import 'vendor/libs';
@import '../blocks/modules/modules';
@import '../blocks/components/components';
// Подключение стилей отдельных страниц
